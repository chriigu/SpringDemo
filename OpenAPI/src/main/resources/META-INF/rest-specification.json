{
  "openapi": "3.1.0",
  "info": {
    "title": "Example OpenAPI Specification",
    "description": "This OpenAPI Specification is used to be the single point of truth for all other example modules in this project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:8080",
      "description": "Example server url"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "readUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "operationId": "createUser",
        "summary": "Creates a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-controller"
        ],
        "operationId": "updateUser",
        "summary": "Updates an existing user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "operationId": "deleteUser",
        "summary": "Delete a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The resource was deleted successfully"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "findUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSearchResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSearchResult": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserDto"
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "$ref": "#/components/schemas/uuid"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "firstName": {
            "$ref": "#/components/schemas/firstName"
          },
          "lastName": {
            "$ref": "#/components/schemas/lastName"
          }
        }
      },
      "CreateUserRequest": {
        "email": {
          "$ref": "#/components/schemas/email"
        },
        "firstName": {
          "$ref": "#/components/schemas/firstName"
        },
        "lastName": {
          "$ref": "#/components/schemas/lastName"
        }
      },
      "DeleteUserRequest": {
        "uuid": {
          "$ref": "#/components/schemas/uuid"
        }
      },
      "uuid": {
        "type": "string",
        "description": "The uuid of a user (Version 7 UUID)",
        "example": "0195fcfc-c694-7810-9e27-917bb0c3a02a"
      },
      "email": {
        "type": "string",
        "description": "The users' email address",
        "example": "abc@def.com"
      },
      "firstName": {
        "type": "string",
        "description": "The users' firstname",
        "example" : "Mike"
      },
      "lastName": {
        "type": "string",
        "description": "The users' lastname",
        "example" : "Bourbon"
      }
    }
  }
}
